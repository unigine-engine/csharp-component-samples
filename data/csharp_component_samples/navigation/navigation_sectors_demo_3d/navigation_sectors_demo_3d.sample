<?xml version='1.0' encoding='utf-8'?>
<sample title="Navigation Sectors Demo 3D">
	<sdk_desc>Calculating and visualizing 3D navigation paths using <i>Navigation Sector</i> and the <i>PathRoute</i> class to track dynamic targets</sdk_desc>
	<desc>
		<brief>This sample demonstrates how to implement 3D pathfinding logic using <strong><link to="navigation_sector">Navigation Sector</link></strong> and <ui><link to="pathroute_class">PathRoute</link></ui> class via the C# API. Robots autonomously fly and collect coins, which are dynamically placed at random locations within the navigation sector volume.</brief>
		<para>The main logic is implemented in the <strong nt="1">PathRoute3DWithTarget</strong> component. A <ui><link to="pathroute_class">PathRoute</link></ui> object is created to calculate a valid 3D path from the robot's current position to the target using <ui><link to="pathroute_class" offset="create3D_Vec3_Vec3_int_void">PathRoute.Create3D()</link></ui>. Once a valid path is generated, the robot rotates toward the next point in the path and moves forward. If the path becomes invalid - for example, if the target ends up in an unreachable area, then the system selects a new target location and recalculates the route.</para>
		<para>Target positions are chosen at random inside the volume of a <i>Navigation Sector</i>, using <ui><link to="navigation_class" offset="inside3D_Vec3_float_int">Inside3D()</link></ui> for validation. The route is automatically updated as the robot approaches the target. If the route is successfully resolved, the path is drawn on screen using <ui><link to="pathroute_class" offset="renderVisualizer_vec4_void">RenderVisualizer()</link></ui>.</para>
		<para>To help visualize active navigation areas, the <strong nt="1">NavigationSectorVisualizer</strong> component renders the geometry of all sectors during runtime.</para>
		<para>This setup is well-suited for implementing autonomous navigation in 3D volume, where both the moving objects and their targets can change position during runtime within a defined navigable area.</para>
	</desc>
	<tags>
		<tag>Navigation &amp; Pathfinding</tag>
		<tag>Visualizer (Visual Debug)</tag>
	</tags>
</sample>